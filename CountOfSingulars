Description: Consider data with assorted details of socks pair IDs. Each element in the array represents a number of similar pairs. You will have to find out how many singular socks are present which do not have any pair left.
Sample input: arrNum = {10, 20, 20, 10, 10, 30, 50, 10, 20}
Output: Count of singular socks = 3
Explanation : Socks Id - 10: total count 4 => Two pairs of socks - no singular left
Socks Id - 20: total count 3 => One pair of socks - 1 singular left
Socks Id - 30: total count 1 => No pair of socks - 1 singular left
Socks Id - 50: total count 1 => No pair of socks - 1 singular left
So, Total number of Singular socks = 3


Solution:

import java.util.HashMap;

public class SingularSocksCount{

    public static int SingularSocksCount(int[] arrNum) {
        HashMap<Integer, Integer> sockOccurrences = new HashMap<>();

        // Count the occurrences of each sock ID
        for (int num : arrNum) {
            sockOccurrences.put(num, sockOccurrences.getOrDefault(num, 0) + 1);
        }

        int countSingular = 0;
        // Count the number of singular socks
        for (int count : sockOccurrences.values()) {
            if (count == 1) {
                countSingular++;
            }
        }

        return countSingular;
    }

    public static void main(String[] args) {
        int[] arrNum = {10, 20, 20, 10, 10, 30, 50, 10, 20};
        int count = countSingularSocks(arrNum);
        System.out.println("Count of singular socks = " + count);
    }
}

