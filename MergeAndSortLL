Question 5: Merge and Sort the elements in two Linked-List
Description: Consider two Linked-List with N number of integers in Data-Node respectively.
Task 1- WAP in Java to merge both Linked-Lists.
Task 2 - Sort the output Linked-List basis of its Data-Node in ascending order.
Sample input: Linked-List-1:- 25->35->12->4->36->48
Linked-List-2:- 8->32->22->45->63->49
Output:- 4->8->12->22->25->32->35->36->45->48->49->63

Solution:

package LinkedList;
class ListNode {
    int val;
    ListNode next;
    
    ListNode(int val) {
        this.val = val;
        this.next = null;
    }
}
public class MergeAndSortLL{
    public static ListNode mergeSortedLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        
        while (l1 != null && l2 != null) {
            if (l1.val < l2.val) {
                current.next = l1;
                l1 = l1.next;
            } else {
                current.next = l2;
                l2 = l2.next;
            }
            current = current.next;
        }
        if (l1 != null) {
            current.next = l1;
        } else if (l2 != null) {
            current.next = l2;
        }
        
        return dummy.next;
    }

    public static void printLinkedList(ListNode head) {
        ListNode current = head;
        while (current != null) {
            System.out.print(current.val + " -> ");
            current = current.next;
        }
        System.out.println("end");
    }

    public static void main(String[] args) {
        // Create linked lists
        ListNode list1 = new ListNode(25);
        list1.next = new ListNode(35);
        list1.next.next = new ListNode(12);
        list1.next.next.next=new ListNode(4);
        list1.next.next.next.next=new ListNode(36);
        list1.next.next.next.next.next=new ListNode(48);
        
        ListNode list2 = new ListNode(8);
        list2.next = new ListNode(32);
        list2.next.next = new ListNode(22);
        list2.next.next.next=new ListNode(45);
        list2.next.next.next.next=new ListNode(63);
        list2.next.next.next.next.next=new ListNode(49);

        System.out.print("Linked-List 1: ");
        printLinkedList(list1);

        System.out.print("Linked-List 2: ");
        printLinkedList(list2);

        ListNode mergedList = mergeSortedLists(list1, list2);

        System.out.print("Merged List: ");
        printLinkedList(mergedList);
    }
}
