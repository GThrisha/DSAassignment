Question 6: Remove Duplicates from Linked-List
Description: Consider a Linked-List with N number of repeated integers in Data-Node.
Task - WAP in Java to remove the repeated integer numbers from Linked-List.
Sample input: Linked-List:- 2->5->12->2->3->5->1->2->5->5
Output:- 2->5->12->3->1

Solution:

import java.util.HashSet;
class Node {
int data;
Node next;
Node(int data) {
   this.data = data;
   this.next = null;
}
}

public class RemoveAllDuplicates {
// Function to remove repeated elements from the linked list
public static Node removeDuplicates(Node head) {
   if (head == null) {
       return null;
   }

   Node current = head;
   Node previous = null;
   HashSet<Integer> uniqueElements = new HashSet<>();

   while (current != null) {
       if (uniqueElements.contains(current.data)) {
           // Skip the node if it's a repeated element
           previous.next = current.next;
       } else {
           // Add the element to the HashSet and move the previous pointer
           uniqueElements.add(current.data);
           previous = current;
       }
       current = current.next;
   }

   return head;
}
public static void printLinkedList(Node head) {
   Node current = head;
   while (current != null) {
       System.out.print(current.data + "->");
       current = current.next;
   }
   System.out.println("null");
}

public static void main(String[] args) {
	 Node head = new Node(2);
   head.next = new Node(5);
   head.next.next = new Node(12);
   head.next.next.next = new Node(2);
   head.next.next.next.next = new Node(3);
   head.next.next.next.next.next = new Node(5);
   head.next.next.next.next.next.next = new Node(1);
   head.next.next.next.next.next.next.next = new Node(2);
   head.next.next.next.next.next.next.next.next = new Node(5);
   head.next.next.next.next.next.next.next.next.next = new Node(5);
   Node uniqueList = removeDuplicates(head);
   System.out.println("Output: ");
   printLinkedList(uniqueList);
}
}
